/**
 *  @typedef {SignalsTypes.Signals.SignalsType} SignalsType
 */

import debug from 'debug'

import {
  INDEX,

  ALPHA,
  OMEGA,
  EMBARK,
  DEBARK,
  CONFIRM,

  ALPHA_STAGE,
  OMEGA_STAGE,
  EMBARK_STAGE,
  DEBARK_STAGE,
  CONFIRM_STAGE,

  ALPHA_PATTERN,
  OMEGA_PATTERN,
  EMBARK_PATTERN,
  DEBARK_PATTERN,
  CONFIRM_PATTERN,

  ENTER_ALPHA,
  LEAVE_ALPHA,
  CHANGE_ALPHA,
  REMAIN_ALPHA,

  ENTER_OMEGA,
  LEAVE_OMEGA,
  CHANGE_OMEGA,
  REMAIN_OMEGA,

  ENTER_ALPHA_ENTER_OMEGA,
  LEAVE_ALPHA_LEAVE_OMEGA,
  CHANGE_ALPHA_ENTER_OMEGA,
  CHANGE_ALPHA_LEAVE_OMEGA,
  REMAIN_ALPHA_ENTER_OMEGA,
  REMAIN_ALPHA_LEAVE_OMEGA,
  CHANGE_ALPHA_CHANGE_OMEGA,
  CHANGE_ALPHA_REMAIN_OMEGA,
  REMAIN_ALPHA_CHANGE_OMEGA,
  REMAIN_ALPHA_REMAIN_OMEGA,

  EXCEPTION,

  FAILURE,
  SUCCESS,
  IN_PROGRESS,
  UNKNOWN,
  COMPLETE
} from './signals.mjs'

const log = debug('shinkansen-signals/signals')

log('`shinkansen` is awake')

/**
 *  @type {SignalsType}
 */
const Signals = {
  INDEX,

  ALPHA,
  OMEGA,
  EMBARK,
  DEBARK,
  CONFIRM,

  ALPHA_STAGE,
  OMEGA_STAGE,
  EMBARK_STAGE,
  DEBARK_STAGE,
  CONFIRM_STAGE,

  ALPHA_PATTERN,
  OMEGA_PATTERN,
  EMBARK_PATTERN,
  DEBARK_PATTERN,
  CONFIRM_PATTERN,

  ENTER_ALPHA,
  LEAVE_ALPHA,
  CHANGE_ALPHA,
  REMAIN_ALPHA,

  ENTER_OMEGA,
  LEAVE_OMEGA,
  CHANGE_OMEGA,
  REMAIN_OMEGA,

  ENTER_ALPHA_ENTER_OMEGA,
  LEAVE_ALPHA_LEAVE_OMEGA,
  CHANGE_ALPHA_ENTER_OMEGA,
  CHANGE_ALPHA_LEAVE_OMEGA,
  REMAIN_ALPHA_ENTER_OMEGA,
  REMAIN_ALPHA_LEAVE_OMEGA,
  CHANGE_ALPHA_CHANGE_OMEGA,
  CHANGE_ALPHA_REMAIN_OMEGA,
  REMAIN_ALPHA_CHANGE_OMEGA,
  REMAIN_ALPHA_REMAIN_OMEGA,

  EXCEPTION,

  FAILURE,
  SUCCESS,
  IN_PROGRESS,
  UNKNOWN,
  COMPLETE
}

export default Object.freeze(Signals)
